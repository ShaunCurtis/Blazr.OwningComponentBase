@page "/"

@inherits OwningComponentBase<ViewService>

@inject NotificationService NotificationService
@inject TransientService TransientService
@inject IServiceProvider SpaServiceProvider

<h2 class="text-secondary border-bottom border-secondary mb-4">OwningComponentBase Testing</h2>

<div class="alert alert-primary">
    <h5>Service Info</h5>
    <div>
        Service Id: @Service.Uid
    </div>
    <div>
        Service => Notification Service Id: @Service.NotificationService?.Uid
    </div>
    <div>
        Service => Notification Service Message: @Service.NotificationService?.Message
    </div>
    <div class="text-end">
        <button class="btn btn-primary" @onclick=this.UpdateView>Update View Notification Service Message</button>
    </div>
</div>

<div class="alert alert-info">
    <h5>Component Info</h5>
    <div>
        Local Notification Service Id: @NotificationService.Uid
    </div>
    <div>
        Local Component Message:  @NotificationService.Message
    </div>
    <div class="text-end">
        <button class="btn btn-primary" @onclick=this.UpdateLocal>Update Component Notification Service Message</button>
    </div>
</div>

@code {
    protected override void OnInitialized()
    {
        Service.SetServices(SpaServiceProvider);
        NotificationService.Updated += this.OnUpdate;
    }

    private void OnUpdate(object? sender, EventArgs e)
        => this.InvokeAsync(StateHasChanged);

    private void UpdateView()
        => Service.UpdateView();

    private void UpdateLocal()
        => NotificationService.NotifyChanged();

    protected override void Dispose(bool disposing)
    {
        NotificationService.Updated -= this.OnUpdate;
        base.Dispose(disposing);
    }
}
